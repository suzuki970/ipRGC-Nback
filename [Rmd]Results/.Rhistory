#          # layout = "tree2",
#          edge.width = 0.3,
#          fade = FALSE,
#          style = "ram",
#          residuals = F,
#          nCharNodes = 0,
#          curvePivot = TRUE,
#          optimizeLatRes = TRUE,
#          intercepts = FALSE,
#          layout = m
# )
#
# p_all$p_pa2 <- mark_sig(p, fit)
# p_all$p_pa2$size = c(4,3)
#
# plot(p_all$p_pa2)
if(saveFig){
mmName = names(p_all)
for(iFig in 1:length(mmName)){
if("size" %in% names(p_all[[iFig]])){
CairoPDF(file=paste0(saveFolder,iFig,"_",mmName[iFig]),
width=p_all[[iFig]]["size"][[1]][1],height=p_all[[iFig]]["size"][[1]][2],
bg = 'transparent')
# ggsave(file =paste0(saveFolder,iFig,"_",mmName[iFig],".pdf"),
#        plot = p_all[[iFig]],
#        width = p_all[[iFig]]["size"][[1]][1], height = p_all[[iFig]]["size"][[1]][2])
plot(p_all[[iFig]])
}else{
# CairoPDF(file=paste0(saveFolder,iFig,"_",mmName[iFig]),
#          bg = 'transparent')
# ggsave(file = paste0(saveFolder,iFig,"_",mmName[iFig],".pdf"),
#        plot = p_all[[iFig]], bg = 'transparent')
}
# eval(parse(text=paste0("print(p_all[[",iFig,"]])")))
# dev.off()
}
}
iFig
if(saveFig){
mmName = names(p_all)
for(iFig in 1:length(mmName)){
if("size" %in% names(p_all[[iFig]])){
# CairoPDF(file=paste0(saveFolder,iFig,"_",mmName[iFig]),
#          width=p_all[[iFig]]["size"][[1]][1],height=p_all[[iFig]]["size"][[1]][2],
#          bg = 'transparent')
# # ggsave(file =paste0(saveFolder,iFig,"_",mmName[iFig],".pdf"),
# #        plot = p_all[[iFig]],
# #        width = p_all[[iFig]]["size"][[1]][1], height = p_all[[iFig]]["size"][[1]][2])
# plot(p_all[[iFig]])
ggsave(file =paste0(saveFolder,iFig,"_",mmName[iFig],".pdf"),
plot = p_all[[iFig]],
width = p_all[[iFig]][varName][[1]][1],
height = p_all[[iFig]][varName][[1]][2],
units = unitName)
plot(p_all[[iFig]])
}else{
# CairoPDF(file=paste0(saveFolder,iFig,"_",mmName[iFig]),
#          bg = 'transparent')
# ggsave(file = paste0(saveFolder,iFig,"_",mmName[iFig],".pdf"),
#        plot = p_all[[iFig]], bg = 'transparent')
}
# eval(parse(text=paste0("print(p_all[[",iFig,"]])")))
# dev.off()
}
}
if(saveFig){
mmName = names(p_all)
for(iFig in 1:length(mmName)){
if("size" %in% names(p_all[[iFig]])){
# CairoPDF(file=paste0(saveFolder,iFig,"_",mmName[iFig]),
#          width=p_all[[iFig]]["size"][[1]][1],height=p_all[[iFig]]["size"][[1]][2],
#          bg = 'transparent')
# # ggsave(file =paste0(saveFolder,iFig,"_",mmName[iFig],".pdf"),
# #        plot = p_all[[iFig]],
# #        width = p_all[[iFig]]["size"][[1]][1], height = p_all[[iFig]]["size"][[1]][2])
# plot(p_all[[iFig]])
ggsave(file =paste0(saveFolder,iFig,"_",mmName[iFig],".pdf"),
plot = p_all[[iFig]],
width = p_all[[iFig]][varName][[1]][1],
height = p_all[[iFig]][varName][[1]][2],
units = "in")
plot(p_all[[iFig]])
}else{
# CairoPDF(file=paste0(saveFolder,iFig,"_",mmName[iFig]),
#          bg = 'transparent')
# ggsave(file = paste0(saveFolder,iFig,"_",mmName[iFig],".pdf"),
#        plot = p_all[[iFig]], bg = 'transparent')
}
# eval(parse(text=paste0("print(p_all[[",iFig,"]])")))
# dev.off()
}
}
if(saveFig){
mmName = names(p_all)
for(iFig in 1:length(mmName)){
if("size" %in% names(p_all[[iFig]])){
# CairoPDF(file=paste0(saveFolder,iFig,"_",mmName[iFig]),
#          width=p_all[[iFig]]["size"][[1]][1],height=p_all[[iFig]]["size"][[1]][2],
#          bg = 'transparent')
# # ggsave(file =paste0(saveFolder,iFig,"_",mmName[iFig],".pdf"),
# #        plot = p_all[[iFig]],
# #        width = p_all[[iFig]]["size"][[1]][1], height = p_all[[iFig]]["size"][[1]][2])
# plot(p_all[[iFig]])
ggsave(file =paste0(saveFolder,iFig,"_",mmName[iFig],".pdf"),
plot = p_all[[iFig]],
width = p_all[[iFig]]["size"][[1]][1],
height = p_all[[iFig]]["size"][[1]][2],
units = "in")
plot(p_all[[iFig]])
}else{
# CairoPDF(file=paste0(saveFolder,iFig,"_",mmName[iFig]),
#          bg = 'transparent')
# ggsave(file = paste0(saveFolder,iFig,"_",mmName[iFig],".pdf"),
#        plot = p_all[[iFig]], bg = 'transparent')
}
# eval(parse(text=paste0("print(p_all[[",iFig,"]])")))
# dev.off()
}
}
# df_pupil["Light"] = 1
# df_pupil[df_pupil["light"]=="low ipRGC",]["Light"] = 0
# tmp_data = df_pupil
# [df_pupil["Nback"]=="2-back",]
tmp_df2 = aggregate( . ~ sub*Run*light*Nback, data = df_pupil_ave, FUN = 'mean')
# tmp_df2 = aggregate( . ~ sub*Run*light*Nback, data = df_pupil, FUN = 'mean')
# tmp_df2 = tmp_df[(tmp_df$Nback == "2-back"),]
model <- '
hit ~ lightNum
hit ~ model_Sleepiness
hit ~ model_Fatigue
model_Sleepiness ~ lightNum
model_Fatigue ~ lightNum
model_Sleepiness ~~ model_Fatigue
'
fit <- sem(model, data = tmp_df2)
fit_sm = summary(fit, fit.measures = TRUE, standardized = TRUE)
path_table = as.data.frame(fit_sm[["pe"]])
table_light = path_table[(path_table$rhs == "lightNum")&(path_table$op == "~"),]
table_hit = path_table[(path_table$lhs == "hit")&(path_table$op == "~"),]
m <- matrix(NA, 3, 3)
m[1, 2] <- "lightNum"
m[2, 2] <- "hit"
m[3, 1] <- "model_Sleepiness"
m[3, 3] <- "model_Fatigue"
p = semPaths(fit,
# rotation = 2,
what = "Est",
# what = "Std",
# what = "paths",
edge.label.cex = 1.2,
# layout = "tree2",
edge.width = 0.3,
fade = FALSE,
style = "ram",
residuals = F,
nCharNodes = 0,
curvePivot = TRUE,
optimizeLatRes = TRUE,
intercepts = FALSE,
layout = m
)
# p_all$p_pa2 <- mark_sig(p, fit)
# plot(p_all$p_pa2)
p_all$p_pa2$size = c(4,3)
model <- '
hit ~ lightNum+model_Sleepiness+model_Fatigue+BP
model_Sleepiness ~ lightNum+BP
model_Fatigue ~ lightNum+BP
model_Sleepiness ~~ model_Fatigue
BP ~ lightNum
'
m <- matrix(NA, 5, 3)
m[1, 3] <- "lightNum"
m[2, 3] <- "BP"
m[3, 1] <- "hit"
m[3, 3] <- "model_Sleepiness"
m[4, 3] <- "model_Fatigue"
fit <- sem(model, data = tmp_df2)
fit_sm = summary(fit, fit.measures = TRUE, standardized = TRUE)
semPaths(fit,
what = "Est",
edge.label.cex = 1.2,
# layout = "tree2",
edge.width = 0.3,
fade = FALSE,
style = "ram",
residuals = F,
nCharNodes = 0,
curvePivot = TRUE,
optimizeLatRes = TRUE,
intercepts = FALSE,
layout = m
)
p = semPaths(fit,
# rotation = 2,
what = "Est",
# what = "Std",
# what = "paths",
edge.label.cex = 1.2,
# layout = "tree2",
edge.width = 0.3,
fade = FALSE,
style = "ram",
residuals = F,
nCharNodes = 0,
curvePivot = TRUE,
optimizeLatRes = TRUE,
intercepts = FALSE,
layout = m
)
parameterEstimates(fit, standardized = FALSE)
# p_all$p_pa3 <- mark_sig(p, fit)
# plot(p_all$p_pa3)
p_all$p_pa3$size = c(4,3)
p_all$p_pa2 <- mark_sig(p, fit)
p_all$p_pa2
plot(p_all$p_pa2)
plot(p_all$p_pa2)
# df_pupil["Light"] = 1
# df_pupil[df_pupil["light"]=="low ipRGC",]["Light"] = 0
# tmp_data = df_pupil
# [df_pupil["Nback"]=="2-back",]
tmp_df2 = aggregate( . ~ sub*Run*light*Nback, data = df_pupil_ave, FUN = 'mean')
# tmp_df2 = aggregate( . ~ sub*Run*light*Nback, data = df_pupil, FUN = 'mean')
# tmp_df2 = tmp_df[(tmp_df$Nback == "2-back"),]
model <- '
hit ~ lightNum
hit ~ model_Sleepiness
hit ~ model_Fatigue
model_Sleepiness ~ lightNum
model_Fatigue ~ lightNum
model_Sleepiness ~~ model_Fatigue
'
fit <- sem(model, data = tmp_df2)
fit_sm = summary(fit, fit.measures = TRUE, standardized = TRUE)
path_table = as.data.frame(fit_sm[["pe"]])
table_light = path_table[(path_table$rhs == "lightNum")&(path_table$op == "~"),]
table_hit = path_table[(path_table$lhs == "hit")&(path_table$op == "~"),]
m <- matrix(NA, 3, 3)
m[1, 2] <- "lightNum"
m[2, 2] <- "hit"
m[3, 1] <- "model_Sleepiness"
m[3, 3] <- "model_Fatigue"
p = semPaths(fit,
# rotation = 2,
what = "Est",
# what = "Std",
# what = "paths",
edge.label.cex = 1.2,
# layout = "tree2",
edge.width = 0.3,
fade = FALSE,
style = "ram",
residuals = F,
nCharNodes = 0,
curvePivot = TRUE,
optimizeLatRes = TRUE,
intercepts = FALSE,
layout = m
)
# p_all$p_pa2 <- mark_sig(p, fit)
# plot(p_all$p_pa2)
p_all$p_pa2$size = c(4,3)
model <- '
hit ~ lightNum+model_Sleepiness+model_Fatigue+BP
model_Sleepiness ~ lightNum+BP
model_Fatigue ~ lightNum+BP
model_Sleepiness ~~ model_Fatigue
BP ~ lightNum
'
m <- matrix(NA, 5, 3)
m[1, 3] <- "lightNum"
m[2, 3] <- "BP"
m[3, 1] <- "hit"
m[3, 3] <- "model_Sleepiness"
m[4, 3] <- "model_Fatigue"
fit <- sem(model, data = tmp_df2)
fit_sm = summary(fit, fit.measures = TRUE, standardized = TRUE)
semPaths(fit,
what = "Est",
edge.label.cex = 1.2,
# layout = "tree2",
edge.width = 0.3,
fade = FALSE,
style = "ram",
residuals = F,
nCharNodes = 0,
curvePivot = TRUE,
optimizeLatRes = TRUE,
intercepts = FALSE,
layout = m
)
p = semPaths(fit,
# rotation = 2,
what = "Est",
# what = "Std",
# what = "paths",
edge.label.cex = 1.2,
# layout = "tree2",
edge.width = 0.3,
fade = FALSE,
style = "ram",
residuals = F,
nCharNodes = 0,
curvePivot = TRUE,
optimizeLatRes = TRUE,
intercepts = FALSE,
layout = m
)
parameterEstimates(fit, standardized = FALSE)
p_all$p_pa3 <- mark_sig(p, fit)
# plot(p_all$p_pa3)
p_all$p_pa3$size = c(4,3)
p_all$p_pa3
# df_pupil["Light"] = 1
# df_pupil[df_pupil["light"]=="low ipRGC",]["Light"] = 0
# tmp_data = df_pupil
# [df_pupil["Nback"]=="2-back",]
tmp_df2 = aggregate( . ~ sub*Run*light*Nback, data = df_pupil_ave, FUN = 'mean')
# tmp_df2 = aggregate( . ~ sub*Run*light*Nback, data = df_pupil, FUN = 'mean')
# tmp_df2 = tmp_df[(tmp_df$Nback == "2-back"),]
model <- '
hit ~ lightNum
hit ~ model_Sleepiness
hit ~ model_Fatigue
model_Sleepiness ~ lightNum
model_Fatigue ~ lightNum
model_Sleepiness ~~ model_Fatigue
'
fit <- sem(model, data = tmp_df2)
fit_sm = summary(fit, fit.measures = TRUE, standardized = TRUE)
path_table = as.data.frame(fit_sm[["pe"]])
table_light = path_table[(path_table$rhs == "lightNum")&(path_table$op == "~"),]
table_hit = path_table[(path_table$lhs == "hit")&(path_table$op == "~"),]
m <- matrix(NA, 3, 3)
m[1, 2] <- "lightNum"
m[2, 2] <- "hit"
m[3, 1] <- "model_Sleepiness"
m[3, 3] <- "model_Fatigue"
p = semPaths(fit,
# rotation = 2,
what = "Est",
# what = "Std",
# what = "paths",
edge.label.cex = 1.2,
# layout = "tree2",
edge.width = 0.3,
fade = FALSE,
style = "ram",
residuals = F,
nCharNodes = 0,
curvePivot = TRUE,
optimizeLatRes = TRUE,
intercepts = FALSE,
layout = m
)
# p_all$p_pa2 <- mark_sig(p, fit)
# plot(p_all$p_pa2)
p_all$p_pa2$size = c(4,3)
model <- '
hit ~ lightNum+model_Sleepiness+model_Fatigue+BP
model_Sleepiness ~ lightNum+BP
model_Fatigue ~ lightNum+BP
model_Sleepiness ~~ model_Fatigue
BP ~ lightNum
'
m <- matrix(NA, 5, 3)
m[1, 3] <- "lightNum"
m[2, 3] <- "BP"
m[3, 1] <- "hit"
m[3, 3] <- "model_Sleepiness"
m[4, 3] <- "model_Fatigue"
fit <- sem(model, data = tmp_df2)
fit_sm = summary(fit, fit.measures = TRUE, standardized = TRUE)
semPaths(fit,
what = "Est",
edge.label.cex = 1.2,
# layout = "tree2",
edge.width = 0.3,
fade = FALSE,
style = "ram",
residuals = F,
nCharNodes = 0,
curvePivot = TRUE,
optimizeLatRes = TRUE,
intercepts = FALSE,
layout = m
)
p = semPaths(fit,
# rotation = 2,
what = "Est",
# what = "Std",
# what = "paths",
edge.label.cex = 1.2,
# layout = "tree2",
edge.width = 0.3,
fade = FALSE,
style = "ram",
residuals = F,
nCharNodes = 0,
curvePivot = TRUE,
optimizeLatRes = TRUE,
intercepts = FALSE,
layout = m
)
parameterEstimates(fit, standardized = FALSE)
p_all$p_pa3 <- mark_sig(p, fit)
# plot(p_all$p_pa3)
p_all$p_pa3$size = c(4,3)
iFig
ggsave(file =paste0(saveFolder,iFig,"_",mmName[iFig],".pdf"),
plot = p_all[[iFig]],
width = p_all[[iFig]]["size"][[1]][1],
height = p_all[[iFig]]["size"][[1]][2],
units = "in")
ggsave(file =paste0(saveFolder,iFig,"_",mmName[iFig],".pdf"),
plot = p_all[[iFig]],
width = p_all[[iFig]]["size"][[1]][1],
height = p_all[[iFig]]["size"][[1]][2],
units = "in")
CairoPDF(file=paste0(saveFolder,iFig,"_",mmName[iFig]),
width=p_all[[iFig]]["size"][[1]][1],height=p_all[[iFig]]["size"][[1]][2],
bg = 'transparent')
# ggsave(file =paste0(saveFolder,iFig,"_",mmName[iFig],".pdf"),
#        plot = p_all[[iFig]],
#        width = p_all[[iFig]]["size"][[1]][1], height = p_all[[iFig]]["size"][[1]][2])
plot(p_all[[iFig]])
if(saveFig){
mmName = names(p_all)
for(iFig in 1:length(mmName)){
if("size" %in% names(p_all[[iFig]])){
CairoPDF(file=paste0(saveFolder,iFig,"_",mmName[iFig]),
width=p_all[[iFig]]["size"][[1]][1],height=p_all[[iFig]]["size"][[1]][2],
bg = 'transparent')
# ggsave(file =paste0(saveFolder,iFig,"_",mmName[iFig],".pdf"),
#        plot = p_all[[iFig]],
#        width = p_all[[iFig]]["size"][[1]][1], height = p_all[[iFig]]["size"][[1]][2])
plot(p_all[[iFig]])
# ggsave(file =paste0(saveFolder,iFig,"_",mmName[iFig],".pdf"),
#        plot = p_all[[iFig]],
#        width = p_all[[iFig]]["size"][[1]][1],
#        height = p_all[[iFig]]["size"][[1]][2],
#        units = "in")
# plot(p_all[[iFig]])
}else{
# CairoPDF(file=paste0(saveFolder,iFig,"_",mmName[iFig]),
#          bg = 'transparent')
# ggsave(file = paste0(saveFolder,iFig,"_",mmName[iFig],".pdf"),
#        plot = p_all[[iFig]], bg = 'transparent')
}
# eval(parse(text=paste0("print(p_all[[",iFig,"]])")))
# dev.off()
}
}
iFig
iFig=29
CairoPDF(file=paste0(saveFolder,iFig,"_",mmName[iFig]),
width=p_all[[iFig]]["size"][[1]][1],height=p_all[[iFig]]["size"][[1]][2],
bg = 'transparent')
# ggsave(file =paste0(saveFolder,iFig,"_",mmName[iFig],".pdf"),
#        plot = p_all[[iFig]],
#        width = p_all[[iFig]]["size"][[1]][1], height = p_all[[iFig]]["size"][[1]][2])
plot(p_all[[iFig]])
if(saveFig){
mmName = names(p_all)
for(iFig in 1:length(mmName)){
if("size" %in% names(p_all[[iFig]])){
CairoPDF(file=paste0(saveFolder,iFig,"_",mmName[iFig]),
width=p_all[[iFig]]["size"][[1]][1],height=p_all[[iFig]]["size"][[1]][2],
bg = 'transparent')
# ggsave(file =paste0(saveFolder,iFig,"_",mmName[iFig],".pdf"),
#        plot = p_all[[iFig]],
#        width = p_all[[iFig]]["size"][[1]][1], height = p_all[[iFig]]["size"][[1]][2])
plot(p_all[[iFig]])
dev.off()
# ggsave(file =paste0(saveFolder,iFig,"_",mmName[iFig],".pdf"),
#        plot = p_all[[iFig]],
#        width = p_all[[iFig]]["size"][[1]][1],
#        height = p_all[[iFig]]["size"][[1]][2],
#        units = "in")
# plot(p_all[[iFig]])
}else{
# CairoPDF(file=paste0(saveFolder,iFig,"_",mmName[iFig]),
#          bg = 'transparent')
# ggsave(file = paste0(saveFolder,iFig,"_",mmName[iFig],".pdf"),
#        plot = p_all[[iFig]], bg = 'transparent')
}
# eval(parse(text=paste0("print(p_all[[",iFig,"]])")))
# dev.off()
}
}
loaded <- sessionInfo()$otherPkgs
loaded
pkg_versions <- data.frame(
Package = names(loaded),
Version = sapply(loaded, function(x) x$Version),
stringsAsFactors = FALSE
)
v
pkg_versions
if(saveFig){
mmName = names(p_all)
for(iFig in 1:length(mmName)){
if("size" %in% names(p_all[[iFig]])){
CairoPDF(file=paste0(saveFolder,iFig,"_",mmName[iFig]),
width=p_all[[iFig]]["size"][[1]][1],height=p_all[[iFig]]["size"][[1]][2],
bg = 'transparent')
plot(p_all[[iFig]])
dev.off()
}else{}
}
}
